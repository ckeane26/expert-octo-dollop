/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: hangman numbers
@author: taco
@tags: [hangman.js]
@addedOn: 2024-6-20
*/

// initial variables
let actualnumber; // the actual number (ikr!!)
let numberGuess; // what the arrow is pointing to 
let currentNumber = 1; // arrow starts on 1
let guess = 3; // how many guesses u have
let gameOver = false; // its not game over yet!
let feedback = ""; // lower/higher


// defining the bitmaps
const a = "a";
const b = "b";
const c = "c";
const d = "d";
const e = "e";
const f = "f";
const g = "g";
const h = "h";
const i = "i";
const j = "j";
const z = "z";


// writing out the letters
setLegend(
  [a, bitmap`
................
................
.......0........
.......0........
.......0........
.......0........
.......0........
.......0........
.......0........
.......0........
.......0........
.......0........
.......0........
.......0........
................
................`],
  [b, bitmap`
................
................
...00000000.....
...........0....
...........0....
...........0....
...........0....
...........0....
....0000000.....
...0............
...0............
...0............
...0............
....00000000....
......222222222.
................`],
  [c, bitmap`
................
................
.....000000.....
...........0....
...........0....
...........0....
...........0....
...........0....
.....000000.....
...........0....
...........0....
...........0....
...........0....
.....000000.....
................
................`],
  [d, bitmap`
................
................
....0......0....
....0......0....
....0......0....
....0......0....
....0......0....
....0......0....
....0......0....
.....000000.....
...........0....
...........0....
...........0....
...........0....
...........0....
................`],
  [e, bitmap`
................
................
....00000000....
...0............
...0............
...0............
...0............
...0............
....0000000.....
...........0....
...........0....
...........0....
...........0....
....0000000.....
................
................`],
  [f, bitmap`
................
................
....0000000.....
...0............
...0............
...0............
...0............
....0000000.....
...0.......0....
...0.......0....
...0.......0....
...0.......0....
...0.......0....
....0000000.....
................
................`],
  [g, bitmap`
................
................
...00000000.....
...........0....
...........0....
...........0....
...........0....
...........0....
...........0....
...........0....
...........0....
...........0....
...........0....
...........0....
................
................`],
  [h, bitmap`
................
................
.....0000000....
....0.......0...
....0.......0...
....0.......0...
....0.......0...
.....0000000....
....0.......0...
....0.......0...
....0.......0...
....0.......0...
....0.......0...
.....0000000....
................
................`],
  [i, bitmap`
................
................
....00000000....
...0........0...
...0........0...
...0........0...
...0........0...
...0........0...
....00000000....
............0...
............0...
............0...
............0...
............0...
............0...
................`],
  [j, bitmap`
................
................
..0...000000....
..0..0......0...
..0..0......0...
..0..0......0...
..0..0......0...
..0..0......0...
..0..0......0...
..0..0......0...
..0..0......0...
..0..0......0...
..0..0......0...
..0...000000....
................
................`],
  [z, bitmap`
................
.......6........
......666.......
.....66666......
....6666666.....
......666.......
......666.......
......666.......
......666.......
......666.......
......666.......
......666.......
................
................
................
................`]
);

// setting the map level
const levels = [
  map`
abcdefghij
z.........
..........
..........`
];
let currentLevel = 0;
setMap(levels[currentLevel]);


// starting a new game, setting a random number and resetting guesses

function newGame() {
  actualNumber = Math.floor(Math.random() * 10) + 1;
  addText("Guess a number \nbetween \n1 and 10.", { x: 3, y: 1, color: color`3` }); 
  guess = 3; // reset number of guesses
  gameOver = false; // reset gameover flag
  feedback = ""; // reset feedback 
  updateText(); 


}

// call newgame to start the game!!
newGame();


// left input -=1 currentNumber
onInput("a", () => {
  if (!gameOver && currentNumber > 1) {
    getFirst(z).x -= 1; // move arrow left
    currentNumber -= 1; // subtract 1 from currentNumber
    updateText(); 
  }
});
// right input += 1 currentNumber
onInput("d", () => {
  if (!gameOver && currentNumber < 10) { //check if game over
    getFirst(z).x += 1; // move arrow right
    currentNumber += 1; // add 1 to currentNumber
    updateText(); 
  }
});


// update the displayed text
function updateText() {
  clearText(); 
  addText(`Current Number: ${currentNumber}`, { x: 1, y: 8, color: color`3` }); // Display currentNumber with specified option
 // addText(`Random Number: ${actualNumber}`, { x: 1, y: 9, color: color`3` }); //check the actual number
  addText(`Guesses left: ${guess}`, { x: 1, y: 10, color: color`3` });
   if (feedback) {
    addText(feedback, { x: 1, y: 11, color: color`3` }); // lower/higher feedback
   }
  // if they're bad at guessing
  if (guess === 0) {
    gameOver = true; // gameover flag true
    clearText(); 
    addText("Game over! :(\nPress's' to \nrestart.", { x: 1, y: 7, color: color`3` });
  }
}
// checking the guessed number
onInput("w", () => {
  if (!gameOver) {
    if (currentNumber === actualNumber) {
      gameOver = true; // Set gameOver flag
      clearText(); 
      addText(`Congrats!!\nYou guessed the\ncorrect number, ${actualNumber}!`, { x: 1, y: 8, color: color`3` });
    } else {
      guess -= 1; // remove a guess :(
      if (currentNumber < actualNumber) { //feedback
        feedback = "Try higher!";
      } else {
        feedback = "Try lower!";
      }
      updateText(); 
    }
  }
});
// s input restart the game
onInput("s", () => {
  newGame(); // calling the newgame function
});


// initial display of text
updateText();